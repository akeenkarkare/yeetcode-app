name: CI Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Job 1: Fast checks (formatting + unit tests)
  fast-checks:
    runs-on: ubuntu-latest
    outputs:
      should-run-e2e: ${{ steps.check-changes.outputs.should-run-e2e }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
      
    - name: Check what files changed
      id: check-changes
      run: |
        if git diff --name-only HEAD~1 HEAD | grep -E '\.(js|jsx|ts|tsx|json)$' | grep -v test; then
          echo "should-run-e2e=true" >> $GITHUB_OUTPUT
        else
          echo "should-run-e2e=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run formatting and unit tests
      run: |
        npm run format:check
        npm run test:coverage
        
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests

  # Job 2: E2E tests (only if source code changed)
  e2e-tests:
    needs: fast-checks
    if: needs.fast-checks.outputs.should-run-e2e == 'true'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Get Playwright version
      id: playwright-version
      run: echo "version=$(npx playwright --version | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')" >> $GITHUB_OUTPUT
      
    - name: Cache Playwright browsers
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}
        
    - name: Install Playwright browsers
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: npx playwright install --with-deps
      
    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          xvfb \
          libasound2-dev \
          libgtk-3-dev \
          libxss1 \
          libgconf-2-4 \
          libxtst6 \
          libxrandr2 \
          libasound2 \
          libpangocairo-1.0-0 \
          libatk1.0-0 \
          libcairo-gobject2 \
          libgtk-3-0 \
          libgdk-pixbuf2.0-0
        
    - name: Run E2E tests (Linux)
      if: runner.os == 'Linux'
      env:
        CI: true
        DISPLAY: :99.0
      run: |
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        sleep 3
        npm run test:e2e
      
    - name: Run E2E tests (Windows/macOS)
      if: runner.os != 'Linux'
      run: npm run test:e2e
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: e2e-results-${{ matrix.os }}
        path: |
          playwright-report/
          test-results/
        retention-days: 7 